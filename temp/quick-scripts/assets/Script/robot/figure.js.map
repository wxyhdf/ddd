{"version":3,"sources":["figure.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\robot","sourcesContent":["import { GameHelper } from \"../common/gameHelper\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Figure extends cc.Component {\r\n\r\n    rigidbody: cc.RigidBody = null;\r\n    onLoad() {\r\n        this.rigidbody = this.node.getComponent(cc.RigidBody);\r\n    }\r\n    start_Run: boolean = false;\r\n    startRun() {\r\n        this.start_Run = true;\r\n    }\r\n\r\n    maxHitCount: number = 5;\r\n    hitcount: number = 5;\r\n    // 每次处理完碰撞体接触逻辑时被调用\r\n    onPostSolve(contact, selfCollider, otherCollider) {\r\n        if (otherCollider.node.name == \"block\") {\r\n            if (this.hitcount >= this.maxHitCount) {\r\n                this.hitcount = 0;\r\n                let worldManifold = contact.getWorldManifold();\r\n                var vel1 = selfCollider.node.getComponent(cc.RigidBody).getLinearVelocityFromWorldPoint(worldManifold.points[0]);\r\n                var vel2 = otherCollider.node.getComponent(cc.RigidBody).getLinearVelocityFromWorldPoint(worldManifold.points[0]);\r\n                var relativeVelocity = vel1.sub(vel2) as cc.Vec2; //获取到两个碰撞体相互碰撞时在碰撞点上的相对速度 如果速度为(0,0)那么判定为上面碰撞\r\n                //console.log(relativeVelocity);\r\n                // let points = contact.getWorldManifold().points;\r\n                // let p = otherCollider.node.position;\r\n                if (relativeVelocity.equals(cc.v2(0, 0))) {\r\n                    let event = new cc.Event.EventCustom(GameHelper.NodeEvent.HitBlock, true);\r\n                    event.setUserData({ target: otherCollider.node });\r\n                    this.node.dispatchEvent(event);\r\n                }\r\n            } else this.hitcount++;\r\n        }\r\n        if (otherCollider.node.name == \"bloodNode\") {\r\n            let event = new cc.Event.EventCustom(GameHelper.NodeEvent.AddBlood, true);\r\n            event.setUserData({ target: otherCollider.node });\r\n            this.node.dispatchEvent(event);\r\n        }\r\n\r\n    }\r\n    onEndContact(contact, selfCollider, otherCollider) {\r\n        this.hitcount = 5;\r\n    }\r\n\r\n    update() {\r\n        // if (this.start_Run) {\r\n        //     if (this.rigidbody.linearVelocity.y <= -640) {\r\n        //         this.rigidbody.linearDamping = 1;\r\n        //     } else {\r\n        //         //this.rigidbody.applyLinearImpulse(cc.v2(0, -640), this.rigidbody.getWorldCenter(), true);\r\n        //         this.rigidbody.linearDamping = 0;\r\n        //     }\r\n        // }\r\n\r\n        if (this.start_Run) {\r\n            this.rigidbody.linearVelocity = cc.v2(0, -540);\r\n        }\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}